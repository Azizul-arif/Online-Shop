@model OnlineShop.Models.ProductTypes
@{
    ViewData["Title"] = "Details";
}

<br />
<h2>Create Product Types</h2>
<form asp-action="Details" method="post">
    <div class="p-4 rounded border">
        <input type="hidden" asp-for="Id" /> <!--Id came from ProductTypes Model Property-->
        <div asp-validation-summary="ModelOnly" class="text-danger">
            <!--this line is for validation-->

        </div>
        <div class="row form-group">
            <div class="col-2">
                <label asp-for="ProductType"></label>
            </div>
            <div class="col-5">
                <input asp-for="ProductType" readonly="readonly" class="form-control" />
            </div>
            <span asp-validation-for="ProductType" class="text-danger"></span>
        </div>
        <div>

            @*<a asp-action="Index" class="btn btn-success">Back To List</a>
        <input type="submit" class="btn btn-primary" value="Back To List" />*@ <!--Back To List work beacause of input type="submit" & method is post. it directly hits to the post action detais -->
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-success">Edit</a>
            <a asp-action="Index" class="btn btn-primary">Back To List</a>

        </div>

    </div>

</form>
@section Scripts{
    @{ await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial");} @*//prevent it going for server side if the value is empty.this line will block it in client side*@
}

